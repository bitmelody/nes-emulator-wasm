name: CI

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-Dwarnings"

jobs:
  format:
    name: Check Format
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Format
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check

  outdated:
    name: Outdated
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_reqeust'
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/install@cargo-outdated
    - run: cargo outdated --exit-code 1

  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:  [macos-latest, ubuntu-latest, windows-latest]
        toolchain: [nightly, beta, stable, 1.59.0]
    steps:
    - uses: actions/checkout@v3
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.toolchain }}
        override: true
        components: rustfmt, clippy
    - uses: Swatinem/rust-cache@v1
    - name: Lint
      uses: actions-rs/cargo@v1
      with:
        command: clippy
    - name: Install Homebrew
      if: matrix.os == 'ubuntu-latest'
      run: |
        set -xeuo pipefail
        bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        test -d ~/.linuxbrew && eval "$(~/.linuxbrew/bin/brew shellenv)"
        test -d /home/linuxbrew/.linuxbrew && eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
        echo "LIBRARY_PATH=$(brew --prefix)/lib" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=$(brew --prefix)/lib" >> $GITHUB_ENV
        sudo apt-get update
        sudo apt-get install build-essential
    - name: Install dependencies
      if: matrix.os != 'windows-latest'
      run: |
        brew update
        brew install sdl2 sdl2_gfx sdl2_image sdl2_mixer sdl2_ttf
        cargo install wasm-pack
    - name: Build TetaNES
      run: cargo build --all-targets --verbose
    - name: Build TetaNES Web
      run: |
        cd tetanes-web
        bash bin/build.sh --dev
    - run: cargo doc --verbose
    - run: cargo test --verbose
